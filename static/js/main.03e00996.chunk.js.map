{"version":3,"sources":["storeContext.js","components/create-post/Create-post.js","components/post/Post.js","components/search/Search.js","components/main/Main.js","components/post-detail/post-detail.js","App.js","store.js","index.js"],"names":["StoreContext","createContext","CreatePost","observer","store","useContext","navigate","useNavigate","useState","title","setTitle","description","setDescription","editPost","edit","useEffect","className","placeholder","type","value","onChange","e","target","name","id","cols","rows","onClick","flas","window","confirm","add","Post","props","data","date","nav","toString","detail","delete","flag","editOn","Search","searchText","setSearchText","Main","to","getData","map","post","idx","PostDetail","setData","topSimilar","setTopSimilar","useParams","getPostById","currPost","topSimilarArr","style","textAlign","item","App","exact","path","element","myStore","Date","makeAutoObservable","this","filter","toLowerCase","includes","trim","obj","length","find","index","findIndex","text","key","Set","split","forEach","allText","count","word","reg","RegExp","match","push","sort","a","b","slice","Index","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.03e00996.chunk.js","sourcesContent":["import {createContext} from \"react\"\n\nexport const StoreContext = createContext();","import React, {useState, useContext, useEffect} from 'react'\nimport './create-post.css'\nimport {StoreContext} from \"../../storeContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport {observer} from 'mobx-react';\nconst CreatePost = observer(() => {\n\n  const store = useContext(StoreContext)\n  let navigate= useNavigate() \n  const [title, setTitle] = useState('')\n  const [description, setDescription] = useState('')\n  const editPost = store.edit ? {...store.edit} : false\n\n  const submit = () => {\n    const flas = window.confirm('do you realy want?')\n    if (editPost) {\n      flas && store.editPost({...editPost, title, description}) \n    } else {\n      flas && store.add({title, description})\n    }\n    flas && navigate('/')\n  }\n\n  const titleChange = (e) => {\n    setTitle(e.target.value)\n  }\n  const descriptionChange = (e) => {\n    setDescription(e.target.value)\n  }\n\n  useEffect(() => {\n    if (editPost) {\n      setTitle(editPost.title)\n      setDescription(editPost.description)\n    }\n  },[]) \n\n  return (\n    <div className=\"create-post\">\n      <h2>{editPost ? 'edit post' : 'create post'}</h2>\n      <div>\n        <input placeholder=\"title\" type=\"text\" className=\"input\" value={title} onChange={titleChange}/>\n      </div>\n      <div>\n        <textarea placeholder=\"description\" className=\"input\"  name=\"\" id=\"\" cols=\"30\" rows=\"10\" value={description} onChange={descriptionChange}></textarea>\n      </div>\n      <button onClick={submit}>{editPost ? 'edit' : 'create'}</button>\n    </div>\n  )\n})\n\nexport default CreatePost\n","import React from 'react'\nimport {useContext} from 'react'\nimport {StoreContext} from \"../../storeContext\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport './post.css'\n\nconst Post = (props) => {\n  const {title,description,id,date} = props.data\n  const store = useContext(StoreContext)\n  let nav = useNavigate()\n  const deletePost = () => {\n    const flag = window.confirm('do you realy want?')\n    flag && store.delete(id)\n  }\n\n  const editPost = () => {\n    const flag = window.confirm('do you realy want?')\n    flag && store.editOn(id)\n    flag && nav(`/edit/${id}`)\n  }\n  return (\n    <div className=\"post\">\n      <h2>{title}</h2>\n      <p>{description}</p>\n      <p>{date.toString()}</p>\n      {!props.detail && <button onClick={() => {deletePost(id)}}>delete</button>}\n      {!props.detail && <button onClick={() => {editPost(id)}}>edit</button>}\n      <button onClick={() => {nav(`/${id}`)}}>more</button>\n      <hr />\n    </div>\n  )\n}\n\nexport default Post\n","import React, {useContext,useState} from 'react'\nimport {StoreContext} from \"../../storeContext\";\nimport './search.css'\n\nconst Search = () => {\n  const store = useContext(StoreContext)\n  const [searchText, setSearchText] = useState()\n  return (\n    <div className=\"search\">\n      <input type=\"text\" value={searchText} onChange={(e) => setSearchText(e.target.value)}/>\n      <button onClick={() => {store.setSearchText(searchText);}}>search</button> \n      <button onClick={() => {store.setSearchText(\"\");setSearchText(\"\")}}>clear</button> \n    </div>\n  )\n}\n\nexport default Search\n","import React,{useContext,useState} from 'react';\nimport {StoreContext} from \"../../storeContext\";\nimport {Link} from 'react-router-dom';\n\nimport Post from '../post/Post';\nimport Search from '../search/Search';\n\nimport {observer} from 'mobx-react';\n\n\nimport './main.css';\n\nconst Main = observer(() => {\n  const store = useContext(StoreContext)\n\n  return (\n    <div className=\"main\">\n      <h2>All Posts</h2>\n      <Link className=\"btn\" to=\"/createpost\">Add Post</Link>\n      <Search/>\n      {store.getData.map((post,idx) => <Post key={idx} data={post}/>)}\n    </div>\n  )\n})\n\nexport default Main\n","import React , {useContext, useEffect ,useState} from 'react'\nimport {\n  useParams\n} from \"react-router-dom\";\nimport {StoreContext} from \"../../storeContext\";\nimport {observer} from 'mobx-react';\nimport Post from '../post/Post';\n\nconst PostDetail = observer(() => {\n  const [data, setData] = useState();\n  const [topSimilar, setTopSimilar] = useState();\n  const store = useContext(StoreContext);\n  const {id} = useParams();\n\n  useEffect(() => {\n    const {currPost,topSimilarArr} = store.getPostById(+id)\n    setData(currPost)\n    setTopSimilar(topSimilarArr)\n  }, [id]);\n\n  if (!data) return <h1>Loading</h1>\n  \n  \n  \n  return (\n    <div>\n      <div className=\"post\">\n        <h2>{data.title}</h2>\n        <p>{data.description}</p>\n        <p>{data.date.toString()}</p>\n        <hr />\n      </div>\n      <div>\n        <h2 style={{textAlign: 'center'}}>TOP3</h2>\n        {topSimilar.map((item ,idx) => <Post key={idx} data={item} detail/>)}\n      </div>\n    </div>\n  )\n})\n\nexport default PostDetail\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Routes as Switch,\n  Route,\n} from \"react-router-dom\";\nimport CreatePost from \"./components/create-post/Create-post\";\nimport Main from \"./components/main/Main\"\nimport PostDetail from \"./components/post-detail/post-detail\";\n\n\n\nexport default function App() {\n  return (\n    <Router>\n        <div>\n          <Switch>\n            <Route exact path=\"/\" element={<Main />}/>\n            <Route exact path=\"/createpost\" element={<CreatePost />}/>\n            <Route exact path=\"/edit/:id\" element={<CreatePost />}/>\n            <Route exact path=\"/:id\" element={<PostDetail />}/>\n          </Switch>\n        </div>\n    </Router>\n  );\n}\n\n\n\n","import { makeAutoObservable } from \"mobx\"\n\nclass Store {\n  data = [\n    { id: 11, title: 'One', description: 'Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim.', date: new Date() },\n    { id: 12, title: 'One lesson One', description: 'Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim.', date: new Date() },\n    { id: 13, title: 'Lesson one one lesson Again', description: 'Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim.', date: new Date() },\n    { id: 14, title: 'Dream Four Again', description: 'Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim.', date: new Date() },\n    { id: 15, title: 'Dream Dream Dream Dream Again Four 5', description: 'Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim.', date: new Date() },\n    { id: 16, title: 'Dream Dream Dream Four 6', description: 'Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim.', date: new Date() },\n    { id: 17, title: 'Dream Dream Dream Four 8', description: 'Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim.', date: new Date() },\n  ]\n\n  edit = null\n  searchText = \"\"\n\n  constructor() {\n      makeAutoObservable(this)\n  }\n  get getData() {\n    return this.data.filter(item => item.title.toLowerCase().includes(this.searchText.toLowerCase().trim()))\n  }\n\n  add(obj) {\n      obj.id = +this.data.length + 11\n      obj.date = new Date()\n      this.data = [obj, ...this.data]\n  }\n\n  delete(id) {\n    this.data = this.data.filter(post => post.id !== id)\n  }\n\n  editOn(id) {\n    this.edit = this.data.find(post => post.id === id)\n  }\n\n  editPost(obj) {\n    obj.date = new Date()\n    const index = this.data.findIndex(post => post.id === obj.id)\n    this.data[index] = obj\n    this.edit = null\n  }\n\n  setSearchText(text) {\n    this.searchText = text\n  }\n\n  getPostById(id) {\n    const currPost = this.data.find(item => item.id === id)\n    const key = new Set([...currPost.title.split(\" \"), ...currPost.description.split(\" \")])\n    let topSimilarArr = []\n\n    this.data.forEach(post => {\n      if (post.id !== id) {\n        const allText = ' ' + post.title + ' ' + post.description + ' '\n        let count = 0\n        for (let word of key) {\n          const reg = new RegExp(` ${word} `, 'gm')\n          if (allText.match(reg)) {\n            count += allText.match(reg).length\n          }\n        }\n        topSimilarArr.push({count, post})\n      }\n    })\n\n  \n    return {currPost, topSimilarArr: topSimilarArr.sort((a,b) =>  b.count - a.count ).slice(0,3).map(item => item.post)}\n  }\n\n}\n\nexport const myStore = new Store()","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport {StoreContext} from \"./storeContext\"\nimport { myStore } from \"./store\"\nimport {\n  BrowserRouter as Router,\n  \n} from \"react-router-dom\";\n\nconst Index = () => {\n  return (\n    <StoreContext.Provider value={myStore}>\n      <App/>\n    </StoreContext.Provider>\n  \n  )\n}\n\nReactDOM.render(<Index/>, document.getElementById('root'))\n\n"],"sourceRoot":""}